# Setup commands for lazy people who dont want to read the full pdf documentation.
# Run these commands as root to build a simple head + 2 compute node setup 
#    with nvidia gpu driver on the head node.
# The only user requirement is entering the MAC address of the 2 compute nodes.
# Instructions assume a clean CentOS8.3 installation, but are not unique to 
#    the africa cluster(s)/equipment.
# Note that some steps are for rebooting, so this script cannot be executed as-is.

dnf -y update
reboot

dnf -y --enablerepo=extras install epel-release
dnf -y --enablerepo=baseos install kernel-devel-$(uname -r) kernel-headers-$(uname -r)
dnf -y install http://repos.openhpc.community/OpenHPC/2/CentOS_8/x86_64/ohpc-release-2-1.el8.x86_64.rpm
dnf -y install wget
wget -P /etc/yum.repos.d https://xcat.org/files/xcat/repos/yum/latest/xcat-core/xcat-core.repo
wget -P /etc/yum.repos.d http://xcat.org/files/xcat/repos/yum/devel/xcat-dep/rh8/x86_64/xcat-dep.repo
dnf -y install dnf-plugins-core
dnf config-manager --set-enabled powertools
dnf -y install ohpc-base xCAT
source /etc/profile.d/xcat.sh
systemctl enable chronyd.service
echo "server 0.africa.pool.ntp.org" >> /etc/chrony.conf
echo "server 1.africa.pool.ntp.org" >> /etc/chrony.conf
echo "server 2.africa.pool.ntp.org" >> /etc/chrony.conf
echo "server 3.africa.pool.ntp.org" >> /etc/chrony.conf
echo "allow all" >> /etc/chrony.conf
systemctl restart chronyd
dnf -y install ohpc-slurm-server
chdef -t site dhcpinterfaces="xcatmn|eno1"
wget http://isoredirect.centos.org/centos/8-stream/isos/x86_64/CentOS-Stream-8-x86_64-20220603-dvd1.iso
copycds ./CentOS-Stream-8-x86_64-20220603-dvd1.iso
lsdef -t osimage
export CHROOT=/install/netboot/centos8/x86_64/compute/rootimg/
genimage centos8-x86_64-netboot-compute
cp /etc/yum.repos.d/OpenHPC.repo $CHROOT/etc/yum.repos.d/
cp /etc/yum.repos.d/epel.repo $CHROOT/etc/yum.repos.d/
dnf -y --installroot=$CHROOT install ohpc-base-compute
dnf -y --installroot=$CHROOT update
chroot $CHROOT systemctl disable firewalld
/bin/cp -f /etc/passwd /etc/group $CHROOT/etc
dnf -y --installroot=$CHROOT install ohpc-slurm-client
echo SLURMD_OPTIONS="--conf-server 10.10.1.10" > $CHROOT/etc/sysconfig/slurmd
dnf -y --installroot=$CHROOT install chrony
echo "server 10.10.1.10" >> $CHROOT/etc/chrony.conf
dnf -y --installroot=$CHROOT install kernel-`uname -r`
genimage centos8-x86_64-netboot-compute -k `uname -r`
dnf config-manager --installroot=$CHROOT --enable baseos
dnf -y --installroot=$CHROOT install --enablerepo=powertools lmod-ohpc
echo "10.10.1.10:/home /home nfs nfsvers=3,nodev,nosuid 0 0" >> $CHROOT/etc/fstab
echo "10.10.1.10:/opt/ohpc/pub /opt/ohpc/pub nfs nfsvers=3,nodev 0 0" >> $CHROOT/etc/fstab
perl -pi -e "s|/tftpboot|#/tftpboot|" /etc/exports
perl -pi -e "s|/install|#/install|" /etc/exports
echo "/home *(rw,no_subtree_check,fsid=10,no_root_squash)" >> /etc/exports
echo "/opt/ohpc/pub *(ro,no_subtree_check,fsid=11)" >> /etc/exports
exportfs -a
systemctl restart nfs-server
systemctl enable nfs-server
echo "server 10.10.1.10" >> $CHROOT/etc/chrony.conf
chroot $CHROOT systemctl enable chronyd
echo "server 10.10.1.10" >> $CHROOT/etc/chrony.conf
echo "account required pam_slurm.so" >> $CHROOT/etc/pam.d/sshd
mkdir -p /install/custom/netboot
chdef -t osimage -o centos8-x86_64-netboot-compute synclists="/install/custom/netboot/compute.synclist"
echo "/etc/passwd -> /etc/passwd" > /install/custom/netboot/compute.synclist
echo "/etc/group -> /etc/group" >> /install/custom/netboot/compute.synclist
echo "/etc/shadow -> /etc/shadow" >> /install/custom/netboot/compute.synclist
echo "/etc/slurm/slurm.conf -> /etc/slurm/slurm.conf " >> /install/custom/netboot/compute.synclist
echo "/etc/munge/munge.key -> /etc/munge/munge.key " >> /install/custom/netboot/compute.synclist
echo "/etc/hosts -> /etc/hosts " >> /install/custom/netboot/compute.synclist
chroot $CHROOT systemctl enable slurmd
chroot $CHROOT systemctl enable munge
chdef -t site domain=aau
chdef -t network net1 net=10.10.1.0 mask=255.0.0.0 gateway=10.10.1.1

mkdef -t node c1 groups=compute,all ip=10.10.1.21 mac=<MAC_ADDRESS> netboot=xnba arch=x86_64
mkdef -t node c2 groups=compute,all ip=10.10.1.22 mac=<MAC_ADDRESS> netboot=xnba arch=x86_64

echo 10.10.1.10 quartz quartz.aau >> /etc/hosts
makehosts
makenetworks
makedhcp -n
makedns -n
packimage centos8-x86_64-netboot-compute
nodeset all osimage=centos8-x86_64-netboot-compute

### COMPUTE NODES ARE NOW READY FOR BOOT ###

systemctl enable munge
systemctl enable slurmctld
systemctl restart munge
systemctl restart slurmctld
scontrol update nodename=c1 state=resume
scontrol update nodename=c2 state=resume
dnf -y install openmpi openmpi-devel gcc-c++
dnf -y --installroot=$CHROOT install openmpi openmpi-devel gcc-c++
packimage centos8-x86_64-netboot-compute
pdsh -w c[1-2] reboot

### GPU DRIVER AND CUDA INSTALLATION ###
dnf clean all
dnf -y update
reboot
dnf -y --enablerepo=extras install epel-release
dnf -y --enablerepo=baseos install kernel-devel-$(uname -r) kernel-headers-$(uname -r)
dnf -y install pciutils dkms
dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo
dnf -y module install nvidia-driver:470-dkms
reboot
dnf -y install cuda-11-2
